#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2022 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# See the output of "$0 -h" for details.

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")

mvd_home_rel_tmp=$(cd "$script_dir/.."; pwd)
mvd_home="${MVD_HOME:-$mvd_home_rel_tmp}"
scripts_dir="$mvd_home/scripts"
script_name="$(basename "$0")"

APP_NAME="MoVeDo runner"

function print_help() {

	echo -e ""
	echo -e "$APP_NAME - Allows to run all that MoVeDo has to offer through a single command."
	echo -e ""
	echo -e "Usage:"
	echo -e "\t$script_name [OPTION...] [COMMAND] [COMMAND_ARGS...]"
	echo -e "Options:"
	echo -e "\t-l, --list"
	echo -e "\t\tPrint the list of available commands and exit"
	echo -e "\t-h, --help"
	echo -e "\t\tPrint this usage help and exit"
	echo -e "\t-v, --version"
	echo -e "\t\tPrint the MoVeDo version and exit"
	echo -e "Examples:"
	echo -e "\t$script_name --help"
	echo -e "\t$script_name --version"
	echo -e "\t$script_name build"
	echo -e "\t$script_name make_html --individual"
	echo -e ""
}

function print_cmd_list() {

	cd "$scripts_dir"
	ls -1
}

if [[ $# -eq 0 ]]
then
	set -- "--help"
fi

# Process command line arguments
if [[ $# -gt 0 ]]
then
	arg="$1"
	shift # $2 -> $1, $3 -> $2, ...

	case "$arg" in
		-l|--list)
			print_cmd_list
			exit 0
			;;
		-h|--help)
			print_help
			exit 0
			;;
		-v|--version)
			cmd="print_movedo_version"
			;;
		*)
			cmd="$arg"
			;;
	esac
fi

cmd_file="$scripts_dir/$cmd"

if ! [ -f "$cmd_file" ]
then
	>&2 echo "Error: Not a valid command: '$cmd'!"
	exit 1
fi

"$cmd_file" "$@"

