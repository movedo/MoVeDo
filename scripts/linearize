#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# Builds a single Markdown file out of an index of Markdown files.
# We do that by using Pandoc with custom filters.
#
# This is part of the [MoVeDo](https://github.com/movedo) project.
# See LICENSE.md for copyright information.

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
# shellcheck source=./_common.sh
. "${script_dir}/_common.sh"

tools=()
tools+=("pandoc") # for Markdown filtering/cleanup
tools+=("python3") # for Panflute
tools+=("panflute") # for Pandoc filters
_check_tool "$script_dir/strip_front_matter"
_check_tools "${tools[@]}"
_check_env

# parameters

cd "$gen_src_dir"

rm -f "$single_md"

pandoc_extra=()
pandoc_extra+=("--citeproc")

echo
echo "Generating single, linear Markdown file ..."
if [ "$(wc -l < "$index_md_file")" -eq 1 ]
then
	md_in="$(cat "$index_md_file")"
	single_md_tmp="${single_md}_tmp"
	# Build from a single source file
	if [ -f "$doc_meta_file" ]
	then
		# Use global document meta-data
		cat "$doc_meta_file" >> "$single_md_tmp"
	fi
	# Use the single source file as-is
	cat "$md_in" >> "$single_md_tmp"
	echo "    adding '$md_in' ..."
	pandoc \
			--from=markdown \
			--to=markdown \
			--standalone \
			--markdown-headings=atx \
			-M allp_prefix="$(dirname "$md_in")/" \
			-M allp_file="$md_in" \
			--filter "$filters_dir/add_local_link_prefix.py" \
			--filter "$filters_dir/normalize_links.py" \
			-M ll_doc_path="" \
			--filter "$filters_dir/linearize_links.py" \
			"${pandoc_extra[@]}" \
		< "$single_md_tmp" \
		>> "$single_md"
	rm "$single_md_tmp"
elif [ -f "$doc_meta_file" ]
then
	# Build from multiple source files

	# Use global document meta-data
	cat "$doc_meta_file" > "$single_md"
	while read -d $'\n' -r md_in
	do
		echo "Linearizing $md_in ..."
		# TODO put this in its own script:
		# extract the document(-fragment)s title from the YAML meta-data
		grep "^title: " "$md_in" > /dev/null && {
			title=$(grep "^title: " "$md_in" \
				| head -n 1 \
				| sed -e 's/^title:[[:space:]]\+//')
			echo -e "# $title\n" >> "$single_md"
		}
		# here we do:
		# * strip front-matter
		# * cleanup
		# * filter
		#   * add_local_link_prefix
		#   * normalize_links
		#   * linearize_links
		# * write to the global document file
		echo "    adding '$md_in' ..."
		"$script_dir/strip_front_matter" "$md_in" \
			| pandoc \
				--from=markdown \
				--to=markdown \
				--markdown-headings=atx \
				-M allp_prefix="$(dirname "$md_in")/" \
				-M allp_file="$md_in" \
				--filter "$filters_dir/add_local_link_prefix.py" \
				--filter "$filters_dir/normalize_links.py" \
				-M ll_doc_path="$md_in" \
				--filter "$filters_dir/linearize_links.py" \
				"${pandoc_extra[@]}" \
			>> "$single_md"
		echo -e "\n" >> "$single_md"
	done < "$index_md_file"
else
	if [ "${MVD_SINGLE_FILE:-true}" = "true" ]
	then
		_error "If you have more then one source file, you need '$doc_meta_file', containing the YAML Front-Matter for the combined document, or you need to set the env var MVD_SINGLE_FILE to 'false'.\nYour index:\n$(cat "$index_md_file")"
	fi
fi

