#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021-2022 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# Install the latest version of Panflute.
#
# This is part of the [MoVeDo](https://github.com/movedo) project.
# See the LICENSES/ folder for copyright information.

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
# shellcheck source=./_common.sh
. "$script_dir/_common.sh"

tools=()
tools+=("pip3") # for getting a recent version of panflute
_check_tools "${tools[@]}"

app_name="Panflute Installer"
script_name="$(basename "$0")"
# parameters
including_locales=$(_movedo_shell_var_to_bool "${MVD_LOCALES:-false}")
from_source=$(_movedo_shell_var_to_bool "${MVD_FROM_SOURCE:-false}")
panflute_ver_required="${MVD_PANFLUTE_VERSION:-}"

function print_help() {

	echo "$app_name - Install the latest version of Panflute."
	echo "Panflute is a Python filter framework"
	echo "for the Pandoc Document type converter."
	echo
	echo "Usage:"
	echo "  $script_name [OPTIONS]"
	echo "Options:"
	echo "  -h, --help              Show this help message"
	echo "  --mvd-locales           Sets users locales to \"en_US.UTF-8\"."
	echo "                          Equivalent to command-line: MVD_LOCALES=1"
	echo "  --mvd-from-source       Install from latest github sources,"
	echo "                          instead of with PIP."
	echo "                          Equivalent to command-line: MVD_FROM_SOURCE=1"
	echo "Examples:"
	echo "  $script_name"
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # $2 -> $1, $3 -> $2, ...

	case "$arg" in
		-h|--help)
			print_help
			exit 0
			;;
		--mvd-locales)
			including_locales=true
			;;
		--mvd-from-source)
			from_source=true
			;;
		--mvd-*)
			# Ignore this option; it is used in other MoVeDo scripts
			_movedo_common_arg_has_value "$arg" && shift
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if $including_locales
then
	# NOTE Required for panflute on python(2)
	echo "en_US UTF-8" > /etc/locale.gen
	locale-gen en_US.UTF-8
	{
		echo "export LANG=en_US.UTF-8"
		echo "export LANGUAGE=en_US:en"
		#echo "export LC_CTYPE=en_US.UTF-8"
		echo "export LC_ALL=en_US.UTF-8"
		echo "export PYTHONIOENCODING=utf8"
	} >> "$HOME/.bashrc"
	source "$HOME/.bashrc"
	source "$HOME/.profile"
fi

if $from_source
then
	prev_dir="$(pwd)"
	mkdir -p "$build_dir"
	cd "$build_dir"
	git clone "https://github.com/sergiocorreia/panflute.git"
	cd panflute
	python3 -m pip install .
	cd "$prev_dir"
else
	if [ -z "$panflute_ver_required" ]
	then
		python3 -m pip install panflute
	else
		python3 -m pip install -Iv panflute=="$panflute_ver_required"
	fi
fi

"$script_dir/print_panflute_version"

