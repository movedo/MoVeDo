#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021-2022 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# Pre-processes Markdown sources with PP (pandoc _p_re-_p_rocessor);
# *.pp.md -> *.md
#
# This is part of the [MoVeDo](https://github.com/movedo) project.
# See the LICENSES/ folder for copyright information.

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
# shellcheck source=./_common.sh
. "$script_dir/_common.sh"

function find_pp_sources() {

	find . \
		-type f \
		-name "*.pp.md" \
		\( ! -regex '.*/\..*' \) \
		\( ! -path "./${build_dir}*" \) \
		\( ! -path "./_site/*" \)
}

if [ "$(find_pp_sources | wc -l)" -lt 1 ]
then
	# No PP sources found
	exit 0
fi

_error "pp is dicontinued, and should be replaces by ypp, or even better: not be used at all."

tools=()
tools+=("pp") # for pre-processing Markdown sources
tools+=("realpath") # for calculating relative paths
_check_tools "${tools[@]}"
_check_env

# parameters

export rewrite_links=true
export proj_dir
export gen_src_dir
export filters_dir

echo
echo "Generate *.md from *.pp.md (Markdown with Pandoc pre-processor (PP) directives) ..."
function process_ppmd() {
	# HACK required inside the function, because BASH can not export arrays
	pandoc_extra=()

	local \
		ppmd \
		rel_dir \
		base \
		source_rel \
		target_abs \
		target_rel \
		source_abs \
		project_dir_rel \
		gen_project_dir_rel \
		gen_project_dir_abs \
		sources_dir_rel pre_dir

	ppmd="$1"
	rel_dir=$(dirname "$ppmd")
	base=$(basename -s ".pp.md" "$ppmd")
	source_rel="$rel_dir/${base}.pp.md"
	target_abs="$gen_src_dir/$rel_dir/${base}.md"
	target_rel=$(realpath --relative-to="$proj_dir" "$target_abs")
	source_abs="$(pwd)/$source_rel"
	project_dir_rel=$(realpath --relative-to="$proj_dir/$rel_dir" "$proj_dir")
	gen_project_dir_rel=$(dirname "$target_rel")
	gen_project_dir_abs=$(pwd)"/$gen_project_dir_rel"
	sources_dir_rel="../.."
	echo -e "\tpp \"$source_rel\"\n\t\t> \"$target_rel\""
	pre_dir="$(pwd)"
	cd "$gen_src_dir"
	pp \
		-Dprojdir="$project_dir_rel" \
		-Dsrcdir="$sources_dir_rel" \
		-Dgensrcdir="$gen_project_dir_abs" \
		"$source_abs" \
		> "$target_abs" \
		|| return $?
	cd "$pre_dir"
	if $rewrite_links
	then
		pandoc \
			--from=markdown \
			--to=markdown \
			--standalone \
			--markdown-headings=atx \
			-M rls_relative_only=True \
			-M rls_ext_from=".pp.md" \
			-M rls_ext_to=".md" \
			-M panflute-path="$filters_dir" \
			-M panflute-filters="replace_link_suffixes" \
			-F panflute \
			--output="${target_rel}_out" \
			"${pandoc_extra[@]}" \
			"$target_rel"
		mv "${target_rel}_out" "$target_rel"
	fi
}
export -f process_ppmd

find_pp_sources | while read -d $'\n' -r pp_md_in
do
	bash -c 'process_ppmd "$0" || kill $PPID' "$pp_md_in"
done

